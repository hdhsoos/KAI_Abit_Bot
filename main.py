from api import api_token  # –¢–æ–∫–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import asyncio
import logging
import json
from keyboards import *

bot = Bot(token=api_token)  # –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø—É–Ω–∫—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å aiogram
dp = Dispatcher()
logging.basicConfig(level=logging.INFO, filename="py_log.log", filemode="a")
with open('users.json', 'r') as fh:
    USERS = json.load(fh)  # –ó–¥–µ—Å—å –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π


@dp.message(Command("start"))  # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
async def send_welcome(message: types.Message):
    if str(message.from_user.id) not in USERS:  # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Å—Ç–∞—Ä—Ç
        USERS[str(message.from_user.id)] = []  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        with open('users.json', 'w') as fp:
            json.dump(USERS, fp)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ json
        await message.answer(
            '–ü—Ä–∏–≤–µ—Ç, {}. –Ø –±–æ—Ç –ö–ù–ò–¢–£-–ö–ê–ò, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ 2024 –≥–æ–¥—É.'.format(
                message.from_user.first_name))
        await message.answer("–í—ã–±–µ—Ä–∏ –∫—Ç–æ —Ç—ã –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –≤–Ω–∏–∑—É.", reply_markup=first_qu.as_markup())
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π —Å—Ç–∞—Ä—Ç
        await message.answer('–ú—ã —É–∂–µ –∑–¥–æ—Ä–æ–≤–∞–ª–∏—Å—å! –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –Ω–∏–∂–µ.', reply_markup=universal.as_markup())


for el in ["üìö –ó–∞–∫–∞–Ω—á–∏–≤–∞—é —à–∫–æ–ª—É", "üë©‚Äçüéì –•–æ—á—É –≤ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—É", "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –Ø —Ä–æ–¥–∏—Ç–µ–ª—å", "üôä –ù–µ —Ö–æ—á—É –æ—Ç–≤–µ—á–∞—Ç—å"]:
    # –ü–æ–∫–∞ —á—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–∞–∂–¥—ã–π –≤—ã–±–æ—Ä
    @dp.message(F.text == el)
    async def schoolkid(message: types.Message):
        await message.answer("–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –í—ã–±–µ—Ä–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è —Ä–∞–∑–¥–µ–ª.", reply_markup=universal.as_markup())


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
