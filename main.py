from api import api_token  # –¢–æ–∫–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
from keyboards import *  # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters.command import Command
import asyncio
import logging
import json

bot = Bot(token=api_token)  # –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø—É–Ω–∫—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å aiogram
dp = Dispatcher()
logging.basicConfig(level=logging.INFO, filename="py_log.log", filemode="a")  # logging
with open('users.json', 'r') as fh:
    USERS = json.load(fh)  # –ó–¥–µ—Å—å –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    # {id: [type]}


@dp.message(Command("start"))  # –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–æ–º–∞–Ω–¥—É —Å—Ç–∞—Ä—Ç
async def send_welcome(message: types.Message):
    if str(message.from_user.id) not in USERS or USERS[
        str(message.from_user.id)] == '':  # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Å—Ç–∞—Ä—Ç –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª—Å—è
        await message.answer(
            '–ü—Ä–∏–≤–µ—Ç, {}. –Ø –±–æ—Ç –ö–ù–ò–¢–£-–ö–ê–ò, –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏ –≤ 2024 –≥–æ–¥—É.'.format(
                message.from_user.first_name))
        await message.answer("–í—ã–±–µ—Ä–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, –∫—É–¥–∞ —Ç—ã –±—É–¥–µ—à—å –ø–æ—Å—Ç—É–ø–∞—Ç—å.",
                             reply_markup=first_qu.as_markup(resize_keyboard=True))
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤—ã–π —Å—Ç–∞—Ä—Ç
        if USERS[
            str(message.from_user.id)] == 'bachelor':  # –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–æ–≤–µ—Ä—è—Ç—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ä–∞–∑–Ω—ã–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            await message.answer('–ú—ã —É–∂–µ –∑–¥–æ—Ä–æ–≤–∞–ª–∏—Å—å! –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –Ω–∏–∂–µ.',
                                 reply_markup=forbachelor.as_markup(resize_keyboard=True))
        else:
            await message.answer('–ú—ã —É–∂–µ –∑–¥–æ—Ä–æ–≤–∞–ª–∏—Å—å! –í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –Ω–∏–∂–µ.',
                                 reply_markup=universal.as_markup(resize_keyboard=True))


@dp.message(Command("clear"))  # –ö–æ–º–∞–Ω–¥–∞ clear, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–≤—ã–±—Ä–∞—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
async def clear(message: types.Message):
    USERS[str(message.from_user.id)] = ''
    await message.answer('–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –∑–∞–Ω–æ–≤–æ –≤—ã–±—Ä–∞—Ç—å, –∫—É–¥–∞ —Ö–æ—á–µ—à—å –ø–æ—Å—Ç—É–ø–∞—Ç—å, –¥–ª—è —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /start')


@dp.message(F.text == "üìö –ù–∞ –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç")  # –ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–≤—à–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –±–∞–∫–∞–ª–∞–≤—Ä
async def bachelor(message: types.Message):
    USERS[str(message.from_user.id)] = 'bachelor'  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–µ–º —Å–µ–±—è –Ω–∞–∑–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
    with open('users.json', 'w') as fp:
        json.dump(USERS, fp)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ json
    await message.answer(
        "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –¢—ã —Å–¥–µ–ª–∞–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä, –µ—Å–ª–∏ –ø–æ—Å—Ç—É–ø–∏—à—å –∫ –Ω–∞–º, –≤–µ–¥—å –≤ –ö–ù–ò–¢–£-–ö–ê–ò –±–æ–ª–µ–µ 40 –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç–∞ –∏ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º —Å–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç–∞. –ü–æ—Å—Ç—É–ø–∏–≤ –∫ –Ω–∞–º, —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–æ–ª—É—á–∏—à—å –ø—Ä–µ—Å—Ç–∏–∂–Ω—ã–π –¥–∏–ø–ª–æ–º –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ ‚Äì —Ç—ã –ø–æ–ª—É—á–∏—à—å —Ä–µ–∞–ª—å–Ω–æ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—É—é –Ω–∞ —Ä—ã–Ω–∫–µ —Ç—Ä—É–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏—é. –í—ã–±–µ—Ä–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ, –æ —á–µ–º —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ.",
        reply_markup=forbachelor.as_markup(resize_keyboard=True))


for el in ["üë©‚Äçüéì –í –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—É", "üìî –ù–∞ –°–ü–û", "üî≠ –í –∞—Å–ø–∏—Ä–∞–Ω—Ç—É—Ä—É"]:
    # –ü–æ–∫–∞ —á—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–∞–∂–¥—ã–π –≤—ã–±–æ—Ä
    @dp.message(F.text == el)
    async def schoolkid(message: types.Message):
        USERS[str(message.from_user.id)] = el  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–µ–º —Å–µ–±—è –Ω–∞–∑–≤–∞–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å.
        with open('users.json', 'w') as fp:
            json.dump(USERS, fp)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ json
        await message.answer("–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è! –í—ã–±–µ—Ä–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è —Ä–∞–∑–¥–µ–ª.",
                             reply_markup=universal.as_markup(resize_keyboard=True))

for el in ["üëã –û –Ω–∞—Å", "üåü –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"]:
    # –ü–æ–∫–∞ —á—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–∞–∂–¥—ã–π –≤—ã–±–æ—Ä
    @dp.message(F.text == el)
    async def about_us(message: types.Message):
        await message.answer("–ë–æ—Ç –µ—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —Å–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è. –ò–∑–≤–∏–Ω–∏.",
                             reply_markup=universal.as_markup(resize_keyboard=True))


@dp.message(F.text == "‚ùì –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å")  # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–ø—Ä–æ—Å–∞
async def askme(message: types.Message):
    await message.answer('–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –Ω–∞–ø–∏—à–∏ @abit_kai_help_bot, –Ω–∞—à–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã —Ç–µ–±–µ –ø–æ–º–æ–≥—É—Ç!')


@dp.message(F.text == "üëã –ë–æ–ª—å—à–µ –æ –Ω–∞—Å")
async def askme(message: types.Message):
    if str(message.from_user.id) in USERS and USERS[str(message.from_user.id)] != '':
        if USERS[str(message.from_user.id)] == 'bachelor':
            await message.answer(
                '–í –ö–ê–ò –æ–±—É—á–µ–Ω–∏–µ ‚Äì —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –ª–µ–∫—Ü–∏–∏ –∏ —Å–µ—Å—Å–∏–∏. –£ –Ω–∞—Å –∂–∏–∑–Ω—å –∫–∏–ø–∏—Ç –∏ –∏–≥—Ä–∞–µ—Ç: –º—ã –ø–æ–µ–º, —Ç–∞–Ω—Ü—É–µ–º –∏ —Ç–≤–æ—Ä–∏–º –Ω–∞ ¬´–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π –≤–µ—Å–Ω–µ¬ª –∏ —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω–æ–º —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ ¬´–ò–∫–∞—Ä–∏–∞–¥–∞¬ª, —É–∫—Ä–µ–ø–ª—è–µ–º —Ç–µ–ª–æ –∏ –¥—É—Ö –≤ –∫–ª–∞—Å—Å–Ω–æ–º —Å–ø–æ—Ä—Ç–∫–æ–º–ø–ª–µ–∫—Å–µ —Å –±–∞—Å—Å–µ–π–Ω–æ–º –∏ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–∫–æ–π, –≤—ã–µ–∑–∂–∞–µ–º –Ω–∞ –ø—Ä–∏—Ä–æ–¥—É –≤ –∑–∞–≥–æ—Ä–æ–¥–Ω—ã–π –ª–∞–≥–µ—Ä—å. –ê –µ—â–µ —É –Ω–∞—Å –µ—Å—Ç—å –∫–æ–≤–æ—Ä–∫–∏–Ω–≥–∏, –≤–∞–π—Ñ–∞–π, —É–¥–æ–±–Ω—ã–µ –æ–±—â–µ–∂–∏—Ç–∏—è –∏ –≤–∫—É—Å–Ω—è—à–∫–∏ –≤ —Å—Ç–æ–ª–æ–≤—ã—Ö.',
                reply_markup=next_back.as_markup(resize_keyboard=True))
    else:
        await message.answer('–ö–∞–∂–µ—Ç—Å—è, –º—ã –Ω–µ–∑–Ω–∞–∫–æ–º—ã. –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /start –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.')


@dp.message(F.text == "üìã –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
async def directions(message: types.Message):
    if str(message.from_user.id) in USERS and USERS[str(message.from_user.id)] != '':
        if USERS[str(message.from_user.id)] == 'bachelor':
            await message.answer("""–í—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø–æ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞–º –∏ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞–º, –Ω–∞–∂–º–∏ –Ω–∞ –ª—é–±–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ –ø–æ–ø–∞–¥—ë—à—å –Ω–∞ –Ω–∞—à —Å–∞–π—Ç, –≥–¥–µ —Å–º–æ–∂–µ—à—å –ø–æ–¥—Ä–æ–±–Ω–æ –≤—Å—ë –∏–∑—É—á–∏—Ç—å.

<a href="https://abiturientu.kai.ru/iante/obrazovatel-nye-programmy-bakalavriata">‚úàÔ∏è –ò–Ω—Å—Ç–∏—Ç—É—Ç –∞–≤–∏–∞—Ü–∏–∏, –Ω–∞–∑–µ–º–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –∏ —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∏ (–ò–ê–ù–¢–≠)</a>
<a href="https://abiturientu.kai.ru/fmf-/-obrazovatel-nye-programmy-bakalavriata">‚öõÔ∏è –§–∏–∑–∏–∫–æ-–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—É–ª—å—Ç–µ—Ç (–§–ú–§)</a>
<a href="https://abiturientu.kai.ru/iaep-/-obrazovatel-nye-programmy-bakalavriata">üéöÔ∏è –ò–Ω—Å—Ç–∏—Ç—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∫–∏ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ –ø—Ä–∏–±–æ—Ä–æ—Å—Ç—Ä–æ–µ–Ω–∏—è (–ò–ê–≠–ü)</a>
<a href="https://abiturientu.kai.ru/iktzi-/-obrazovatel-nye-programmy-bakalavriata">üñ• –ò–Ω—Å—Ç–∏—Ç—É—Ç –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –∑–∞—â–∏—Ç—ã –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–ò–ö–¢–ó–ò)</a>
<a href="https://abiturientu.kai.ru/iret-/-obrazovatel-nye-programmy-bakalavriata">üì° –ò–Ω—Å—Ç–∏—Ç—É—Ç —Ä–∞–¥–∏–æ—ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∏, —Ñ–æ—Ç–æ–Ω–∏–∫–∏ –∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π (–ò–†–≠–§-–¶–¢)</a>
<a href="https://abiturientu.kai.ru/ieust-/-obrazovatel-nye-programmy-bakalavriata">üí∞ –ò–Ω—Å—Ç–∏—Ç—É—Ç –∏–Ω–∂–µ–Ω–µ—Ä–Ω–æ–π —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ (–ò–ò–≠–∏–ü)</a>
<a href="https://abiturientu.kai.ru/vspit-/-obrazovatel-nye-programmy-bakalavriata">üöÄ –í—ã—Å—à–∞—è —à–∫–æ–ª–∞ –ø—Ä–∏–∫–ª–∞–¥–Ω—ã—Ö –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π (–í–®–ü–ò–¢)</a>""",
                                 parse_mode="HTML")
    else:
        await message.answer('–ö–∞–∂–µ—Ç—Å—è, –º—ã –Ω–µ–∑–Ω–∞–∫–æ–º—ã. –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /start –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.')


@dp.message(F.text == "üåü –í–∞–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è")
async def important(message: types.Message):
    if str(message.from_user.id) in USERS and USERS[str(message.from_user.id)] != '':
        if USERS[str(message.from_user.id)] == 'bachelor':
            await message.answer("""–í –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞ lk.kai.ru - —Ç–∞–º —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π —Ñ–æ—Ä–º–µ, –æ—Ç—Å–ª–µ–¥–∏—Ç—å —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ —É–∑–Ω–∞—Ç—å –æ —Ç–æ–º, —á—Ç–æ –ø–æ—Å—Ç—É–ø–∏–ª!
–¢–∞–∫–∂–µ –º–æ–∂–µ—à—å –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å <a href="https://abiturientu.kai.ru/documents/1470594/10919962/–ü—Ä–∞–≤–∏–ª–∞+–ø—Ä–∏–µ–º–∞+BO.pdf/2f8200d9-c9e8-4672-a0d1-be511bd781ad">–ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø—Ä–∏—ë–º–∞</a> –∏ <a href="https://abiturientu.kai.ru/normativnye-dokumenty">–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏</a>.
–ê –Ω–∞ <a href="https://abiturientu.kai.ru/bakalavriat">—Å–∞–π—Ç–µ –ö–ê–ò</a> —Ç—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø–æ—Ä—è–¥–∫–µ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –Ω–∞ –±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç –∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Ç–µ—Ç.""", parse_mode="HTML")
    else:
        await message.answer('–ö–∞–∂–µ—Ç—Å—è, –º—ã –Ω–µ–∑–Ω–∞–∫–æ–º—ã. –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /start –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.')

@dp.message(F.text == "üîç –ï—â—ë")
async def askme(message: types.Message):
    if str(message.from_user.id) in USERS and USERS[str(message.from_user.id)] != '':
        if USERS[str(message.from_user.id)] == 'bachelor':
            await message.answer(
                'üèÜ –ö–ù–ò–¢–£-–ö–ê–ò –≤—Ö–æ–¥–∏—Ç –≤ –¢–û–ü-50 –ª—É—á—à–∏—Ö –≤—É–∑–æ–≤ —Å—Ç—Ä–∞–Ω—ã: üëá\nhttps://raex-rr.com/education/russian_universities/top-100_universities/2023/',
                reply_markup=back_menu.as_markup(resize_keyboard=True))
    else:
        await message.answer('–ö–∞–∂–µ—Ç—Å—è, –º—ã –Ω–µ–∑–Ω–∞–∫–æ–º—ã. –û—Ç–ø—Ä–∞–≤—å –∫–æ–º–∞–Ω–¥—É /start –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.')


@dp.message(F.text == "‚ùå –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")  # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
async def cancel(message: types.Message):
    if USERS[str(message.from_user.id)] == 'bachelor':
        await message.answer("–•–æ—Ä–æ—à–æ, –≤–µ—Ä–Ω—ë–º—Å—è –≤ –º–µ–Ω—é.", reply_markup=forbachelor.as_markup(resize_keyboard=True))
    else:
        await message.answer("–•–æ—Ä–æ—à–æ, –≤–µ—Ä–Ω—ë–º—Å—è –≤ –º–µ–Ω—é.",
                             reply_markup=universal.as_markup(resize_keyboard=True))


@dp.message(F.text)  # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def new_text(message: types.Message):
    if str(message.from_user.id) in USERS and USERS[str(message.from_user.id)] != '':
        if USERS[str(message.from_user.id)] == 'bachelor':
            await message.answer('–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å. –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ.',
                                 reply_markup=forbachelor.as_markup(resize_keyboard=True))
    else:
        await message.answer('–Ø –Ω–µ –ø–æ–Ω—è–ª, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å. –í–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ.',
                             reply_markup=universal.as_markup(resize_keyboard=True))


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())
